{"version":3,"sources":["helpers/AjaxHelper/index.js","pages/Nderfaqja1/index.js","pages/Nderfaqja2/index.js","pages/Nderfaqja3/index.js","App.js","index.js"],"names":["baseUrl","AjaxHelper","getData","a","endpoint","fetch","method","headers","response","json","postData","data","body","JSON","stringify","putData","deleteData","ajaxHelper","Nderfaqja1","props","state","isModalOpen","toggleModal","setState","postId","userId","postTitle","postBody","modalMode","setModalMode","mode","modalTitle","setModalTitle","title","setPostId","setUserId","setPostTitle","setPostBody","this","handleEdit","handleCreate","Modal","isOpen","toggle","ModalHeader","ModalBody","Input","type","placeholder","value","onChange","e","target","rows","ModalFooter","Button","color","onClick","id","then","alert","className","colSpan","users","posts","handleDelete","tableRows","forEach","post","index","user","push","name","username","email","company","style","width","loading","Table","dark","responsive","renderLoading","renderNoData","renderData","Fragment","Container","fluid","renderModal","renderTable","Component","Nderfaqja2","comments","todos","userPostsIds","userPostNr","userCommentNr","userTodoNr","comment","todo","completed","to","Nderfaqja3","match","params","withRouter","App","setUsers","setPosts","setLoading","setComments","setTodos","bind","concat","postsCopy","filter","Navbar","expand","NavbarToggler","console","log","Collapse","navbar","Nav","NavItem","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1020b67.chunk.js","sourcesContent":["const baseUrl = \"https://jsonplaceholder.typicode.com\";\r\n\r\nclass AjaxHelper {\r\n  getData = async (endpoint = \"\") => {\r\n    const response = await fetch(baseUrl + endpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  postData = async (endpoint = \"\", data = {}) => {\r\n    const response = await fetch(baseUrl + endpoint, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  putData = async (endpoint = \"\", data = {}) => {\r\n    const response = await fetch(baseUrl + endpoint, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  deleteData = async (endpoint = \"\") => {\r\n    const response = await fetch(baseUrl + endpoint, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    return response.json();\r\n  };\r\n}\r\n\r\nexport default AjaxHelper;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport AjaxHelper from \"../../helpers/AjaxHelper/index\";\r\n\r\nconst ajaxHelper = new AjaxHelper();\r\n\r\nclass Nderfaqja1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n      toggleModal: () => {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen,\r\n          postId: null,\r\n          userId: null,\r\n          postTitle: \"\",\r\n          postBody: \"\",\r\n        });\r\n      },\r\n      modalMode: null,\r\n      setModalMode: (mode) => {\r\n        this.setState({\r\n          modalMode: mode,\r\n        });\r\n      },\r\n      modalTitle: null,\r\n      setModalTitle: (title) => {\r\n        this.setState({\r\n          modalTitle: title,\r\n        });\r\n      },\r\n      postId: null,\r\n      userId: null,\r\n      postTitle: \"\",\r\n      postBody: \"\",\r\n      setPostId: (postId) => {\r\n        this.setState({\r\n          postId: postId,\r\n        });\r\n      },\r\n      setUserId: (userId) => {\r\n        this.setState({\r\n          userId: userId,\r\n        });\r\n      },\r\n      setPostTitle: (postTitle) => {\r\n        this.setState({\r\n          postTitle: postTitle,\r\n        });\r\n      },\r\n      setPostBody: (postBody) => {\r\n        this.setState({\r\n          postBody: postBody,\r\n        });\r\n      },\r\n    };\r\n  }\r\n\r\n  renderModal() {\r\n    const { handleEdit, handleCreate } = this.props.props;\r\n    const {\r\n      isModalOpen,\r\n      toggleModal,\r\n      modalTitle,\r\n      modalMode,\r\n      postId,\r\n      userId,\r\n      postTitle,\r\n      postBody,\r\n    } = this.state;\r\n    return (\r\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n        <ModalHeader>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n          <label>Post Title</label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Post Title\"\r\n            value={postTitle}\r\n            onChange={(e) => {\r\n              this.setState({\r\n                postTitle: e.target.value,\r\n              });\r\n            }}\r\n          ></Input>\r\n          <label>Post Body</label>\r\n          <Input\r\n            type=\"textarea\"\r\n            rows={4}\r\n            placeholder=\"Post Body\"\r\n            value={postBody}\r\n            onChange={(e) => {\r\n              this.setState({\r\n                postBody: e.target.value,\r\n              });\r\n            }}\r\n          ></Input>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              if (modalMode === \"edit\") {\r\n                if (postTitle && postBody) {\r\n                  ajaxHelper\r\n                    .putData(`/posts/${postId}`, {\r\n                      id: postId,\r\n                      title: postTitle,\r\n                      body: postBody,\r\n                      userId: userId,\r\n                    })\r\n                    .then((data) => {\r\n                      handleEdit(data);\r\n                      toggleModal();\r\n                    });\r\n                } else alert(\"Inputs can't be left empty\");\r\n              }\r\n\r\n              if (modalMode === \"create\") {\r\n                if (postTitle && postBody) {\r\n                  ajaxHelper\r\n                    .postData(`/posts/`, {\r\n                      title: postTitle,\r\n                      body: postBody,\r\n                      userId: 1,\r\n                    })\r\n                    .then((data) => {\r\n                      handleCreate(data);\r\n                      toggleModal();\r\n                    });\r\n                } else alert(\"Inputs can't be left empty\");\r\n              }\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>\r\n            Back\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <tr>\r\n        <td className=\"text-center\" colSpan={8}>\r\n          Duke ngarkuar te dhenat...\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderNoData() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={8}>Nuk ka te dhena.</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderData() {\r\n    const { users, posts, handleDelete } = this.props.props;\r\n    const {\r\n      setPostId,\r\n      setUserId,\r\n      setPostTitle,\r\n      setPostBody,\r\n      toggleModal,\r\n      setModalTitle,\r\n      setModalMode,\r\n    } = this.state;\r\n    const tableRows = [];\r\n\r\n    if (posts) {\r\n      posts.forEach((post, index) => {\r\n        users.forEach((user) => {\r\n          if (post.userId === user.id) {\r\n            tableRows.push(\r\n              <tr key={post.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.username}</td>\r\n                <td>{user.email}</td>\r\n                <td>{post.title}</td>\r\n                <td>{user.company.name}</td>\r\n                <td>{post.body}</td>\r\n                <td style={{ width: \"250px\" }}>\r\n                  <Button\r\n                    className=\"mx-2\"\r\n                    color={\"primary\"}\r\n                    onClick={() => {\r\n                      setModalTitle(\"Edit Post\");\r\n                      setModalMode(\"edit\");\r\n                      toggleModal();\r\n                      setPostId(post.id);\r\n                      setUserId(user.id);\r\n                      setPostTitle(post.title);\r\n                      setPostBody(post.body);\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    color={\"danger\"}\r\n                    onClick={() => {\r\n                      ajaxHelper\r\n                        .deleteData(`/posts/${post.id}`)\r\n                        .then((data) => {\r\n                          handleDelete(post.id);\r\n                        });\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          }\r\n        });\r\n      });\r\n\r\n      return tableRows;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderTable() {\r\n    const { users, loading } = this.props.props;\r\n\r\n    return (\r\n      <Table dark responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>NR</th>\r\n            <th>Name</th>\r\n            <th>Username</th>\r\n            <th>E-Mail</th>\r\n            <th>Post Title</th>\r\n            <th>Company Name</th>\r\n            <th>Post Body</th>\r\n            <th className=\"text-center\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading && this.renderLoading()}\r\n          {!loading && !users && this.renderNoData()}\r\n          {users && this.renderData()}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { setModalTitle, setModalMode, toggleModal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content\">\r\n          <Container className=\"px-5 py-3\" fluid>\r\n            {this.renderModal()}\r\n            <Button\r\n              onClick={() => {\r\n                setModalTitle(\"Create Post\");\r\n                setModalMode(\"create\");\r\n                toggleModal();\r\n              }}\r\n              className=\"mb-3\"\r\n              color={\"success\"}\r\n            >\r\n              Create a Post\r\n            </Button>\r\n            {this.renderTable()}\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nderfaqja1;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table } from \"reactstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Nderfaqja2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <tr>\r\n        <td className=\"text-center\" colSpan={8}>\r\n          Duke ngarkuar te dhenat...\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderNoData() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={8}>Nuk ka te dhena.</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderData() {\r\n    const { users, posts, comments, todos } = this.props.props;\r\n    const tableRows = [];\r\n\r\n    let userPostsIds = [];\r\n    let userPostNr = 0;\r\n    let userCommentNr = 0;\r\n    let userTodoNr = 0;\r\n\r\n    if (users) {\r\n      users.forEach((user, index) => {\r\n        if (posts) {\r\n          posts.forEach((post) => {\r\n            if (post.userId === user.id) {\r\n              userPostsIds.push(post.id);\r\n              userPostNr++;\r\n            }\r\n          });\r\n        }\r\n\r\n        if (comments) {\r\n          userPostsIds.forEach((id) => {\r\n            comments.forEach((comment) => {\r\n              if (comment.postId === id && user.email === comment.email) {\r\n                userCommentNr++;\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        if (todos) {\r\n          todos.forEach((todo) => {\r\n            if (todo.completed && todo.userId === user.id) {\r\n              userTodoNr++;\r\n            }\r\n          });\r\n        }\r\n\r\n        tableRows.push(\r\n          <tr key={user.id}>\r\n            <td>{index + 1}</td>\r\n            <td>{user.name}</td>\r\n            <td>{user.username}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.company.name}</td>\r\n            <td>\r\n              <Link to={`/users/${user.id}`}>{userPostNr}</Link>\r\n            </td>\r\n            <td>{userCommentNr}</td>\r\n            <td>{userTodoNr}</td>\r\n          </tr>\r\n        );\r\n\r\n        userPostsIds = [];\r\n        userPostNr = 0;\r\n        userCommentNr = 0;\r\n        userTodoNr = 0;\r\n      });\r\n\r\n      return tableRows;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  renderTable() {\r\n    const { users, loading } = this.props.props;\r\n\r\n    return (\r\n      <Table dark responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>NR</th>\r\n            <th>Name</th>\r\n            <th>Username</th>\r\n            <th>E-Mail</th>\r\n            <th>Company Name</th>\r\n            <th>Nr Posts</th>\r\n            <th>Nr Comments</th>\r\n            <th>Nr Todos</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {loading && this.renderLoading()}\r\n          {!loading && !users && this.renderNoData()}\r\n          {users && this.renderData()}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content\">\r\n          <Container className=\"px-5 py-3\" fluid>\r\n            {this.renderTable()}\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nderfaqja2;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Table } from \"reactstrap\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Nderfaqja3 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: null,\r\n      setUserId: (userId) => {\r\n        this.setState({\r\n          id: userId,\r\n        });\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setUserId } = this.state;\r\n    const id = this.props.match.params.userId;\r\n    setUserId(id);\r\n  }\r\n\r\n  renderLoading() {\r\n    return (\r\n      <tr>\r\n        <td className=\"text-center\" colSpan={8}>\r\n          Duke ngarkuar te dhenat...\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderNoData() {\r\n    return (\r\n      <tr>\r\n        <td colSpan={8}>Nuk ka te dhena.</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderData() {\r\n    const { posts, comments } = this.props.props;\r\n    const { id } = this.state;\r\n    const tableRows = [];\r\n\r\n    if (posts) {\r\n      posts.forEach((post) => {\r\n        // eslint-disable-next-line\r\n        if (post.userId == id) {\r\n          if (comments) {\r\n            comments.forEach((comment) => {\r\n              if (comment.postId === post.id) {\r\n                tableRows.push(\r\n                  <tr key={comment.id}>\r\n                    <td>{post.title}</td>\r\n                    <td>{post.body}</td>\r\n                    <td>{comment.name}</td>\r\n                    <td>{comment.body}</td>\r\n                  </tr>\r\n                );\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return tableRows;\r\n  }\r\n\r\n  renderTable() {\r\n    const { posts } = this.props.props;\r\n\r\n    return (\r\n      <Table dark responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Post Title</th>\r\n            <th>Post Body</th>\r\n            <th>Comment Name</th>\r\n            <th>Comment Body</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{posts && this.renderData()}</tbody>\r\n      </Table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content\">\r\n          <Container className=\"px-5 py-3\" fluid>\r\n            {this.renderTable()}\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// Using with router here so i can get the id param from route\r\nexport default withRouter(Nderfaqja3);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Link, Route } from \"react-router-dom\";\n\nimport { Navbar, NavbarToggler, Collapse, Nav, NavItem } from \"reactstrap\";\n\nimport Nderfaqja1 from \"./pages/Nderfaqja1\";\nimport Nderfaqja2 from \"./pages/Nderfaqja2\";\nimport Nderfaqja3 from \"./pages/Nderfaqja3\";\n\n// API Calls\nimport AjaxHelper from \"./helpers/AjaxHelper/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: null,\n      posts: null,\n      comments: null,\n      todos: null,\n      loading: true,\n      setUsers: (users) => {\n        this.setState({\n          users: users,\n        });\n      },\n      setPosts: (posts) => {\n        this.setState({\n          posts: posts,\n        });\n      },\n      setLoading: (loading) => {\n        this.setState({\n          loading: loading,\n        });\n      },\n      setComments: (comments) => {\n        this.setState({\n          comments: comments,\n        });\n      },\n      setTodos: (todos) => {\n        this.setState({\n          todos: todos,\n        });\n      },\n    };\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n  }\n\n  componentDidMount() {\n    const ajaxHelper = new AjaxHelper();\n    const { setUsers, setPosts, setLoading, setComments, setTodos } =\n      this.state;\n\n    ajaxHelper.getData(\"/users\").then((data) => {\n      setUsers(data);\n      setLoading(false);\n    });\n\n    ajaxHelper.getData(\"/posts\").then((data) => {\n      setPosts(data);\n    });\n\n    ajaxHelper.getData(\"/comments\").then((data) => {\n      setComments(data);\n    });\n\n    ajaxHelper.getData(\"/todos\").then((data) => {\n      setTodos(data);\n    });\n  }\n\n  handleCreate(data) {\n    const { posts, setPosts } = this.state;\n    let dataArray = [data];\n    let postsCopy = dataArray.concat(posts);\n    setPosts(postsCopy);\n  }\n\n  handleEdit(data) {\n    const { posts, setPosts } = this.state;\n    let postsCopy = [];\n    if (posts) {\n      posts.forEach((post) => {\n        if (post.id === data.id) {\n          post = data;\n        }\n        postsCopy.push(post);\n      });\n    }\n    setPosts(postsCopy);\n  }\n\n  handleDelete(data) {\n    const { posts, setPosts } = this.state;\n    let postsCopy = [];\n\n    postsCopy = posts.filter((post) => {\n      return post.id !== data;\n    });\n\n    setPosts(postsCopy);\n  }\n\n  render() {\n    const { users, posts, loading, comments, todos } = this.state;\n\n    return (\n      <React.Fragment>\n        <Router>\n          <div>\n            <Navbar color=\"dark\" dark expand=\"md\">\n              <NavbarToggler\n                onClick={() => {\n                  console.log(\"toggle\");\n                }}\n              />\n              <Collapse isOpen={true} navbar>\n                <Nav className=\"mr-auto\" navbar>\n                  <NavItem>\n                    <Link className=\"text-white mr-2\" to=\"/\">\n                      Posts\n                    </Link>\n                  </NavItem>\n                  <NavItem>\n                    <Link className=\"text-white\" to=\"/users\">\n                      Comments\n                    </Link>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Navbar>\n\n            <Switch>\n              <Route path=\"/users/:userId\">\n                <Nderfaqja3\n                  props={{\n                    posts: posts,\n                    comments: comments,\n                  }}\n                />\n              </Route>\n              <Route path=\"/users\">\n                <Nderfaqja2\n                  props={{\n                    posts: posts,\n                    users: users,\n                    comments: comments,\n                    todos: todos,\n                    loading: loading,\n                  }}\n                />\n              </Route>\n              <Route path=\"/\">\n                <Nderfaqja1\n                  props={{\n                    posts: posts,\n                    users: users,\n                    loading: loading,\n                    handleCreate: this.handleCreate,\n                    handleEdit: this.handleEdit,\n                    handleDelete: this.handleDelete,\n                  }}\n                />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}